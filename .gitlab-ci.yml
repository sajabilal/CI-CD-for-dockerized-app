stages: 
  - build
  - deploy
  
build_image: #job name 
  stage: build
  image: google/cloud-sdk:latest #i need docker in google cloud image inorder to run gc commands in the container (the client of docker)
  services: 
    - "docker:24.0.5-dind" #the demon of docker 
  variables:
    DOCKER_HOST: tcp://docker:2375 #allows the demon to function
    CI_DEBUG_TRACE: "true"
  before_script: #log into google cloud before proceeding to the script
    - gcloud auth activate-service-account $CLOUD_SERVICE_NAME --key-file $cape_technical_challenge_googlecloud_key --project $PROJECT_ID
  script: #like we do manually, we build an image to googlecloud registry 
    - docker build -t gcr.io/$PROJECT_ID/json-project:latest .
    - gcloud auth configure-docker
    - docker push gcr.io/$PROJECT_ID/json-project:latest 

    
delpoy_cloudrun:
  stage: deploy
  image: google/cloud-sdk:alpine
  only:
  - main
  script:
    - echo "i am in dEploy"
    - gcloud auth activate-service-account $CLOUD_SERVICE_NAME --key-file $cape_technical_challenge_googlecloud_key --project $PROJECT_ID
    - gcloud run deploy bycape-challenge-terraform --image=gcr.io/cape-technical-challenge/json-project:latest --region=us-central1 --port=3000 --min-instances=0 --cpu=1 --memory=2Gi --concurrency=5

